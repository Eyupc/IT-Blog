---
export const prerender = true;
import { getCollection } from "astro:content";
import Layout from "../../layouts/BlogPost.astro";
import type { GetStaticPaths } from "astro";

export const getStaticPaths = (async () => {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: {
      category: post.data.category,
      slug: post.slug.split("/")[1], // Gets the slug after category/
    },
    props: { post },
  }));
}) satisfies GetStaticPaths;

import type { CollectionEntry } from "astro:content";

const { post } = Astro.props as { post: CollectionEntry<"blog"> };
const Content = post.render ? await post.render() : null;

const readingTime = (text: string) => {
  const wordsPerMinute = 50;
  const words = text.split(/\s+/).length;
  return Math.ceil(words / wordsPerMinute);
};
---

<Layout frontmatter={post.data} readingTime={readingTime(post.body)}>
  {Content && <Content.Content />}
</Layout>
